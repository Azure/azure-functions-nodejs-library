jobs:
    - job:
      templateContext:
          outputs:
              - output: pipelineArtifact
                path: $(Build.ArtifactStagingDirectory)/dropOutput
                artifact: drop
                sbomBuildDropPath: '$(Build.ArtifactStagingDirectory)/dropInput'
                sbomPackageName: 'Azure Functions Node.js Programming Model'
                # The list of components can't be determined from the webpacked file in the staging dir, so reference the original node_modules folder
                sbomBuildComponentPath: '$(Build.SourcesDirectory)/node_modules'
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: 20.x
            displayName: 'Install Node.js'
          - script: npm ci
            displayName: 'npm ci'
          - script: npm run updateVersion -- --buildNumber $(Build.BuildNumber)
            displayName: 'npm run updateVersion'
            condition: and(succeeded(), eq(${{ parameters.IsPrerelease }}, true))
          - script: npm run build
            displayName: 'npm run build'
          - script: npm run minify
            displayName: 'npm run minify'
          - task: CopyFiles@2
            displayName: 'Copy files to staging'
            inputs:
                sourceFolder: '$(Build.SourcesDirectory)'
                contents: |
                    dist/**
                    src/**
                    types/**
                    LICENSE
                    package.json
                    README.md
                targetFolder: '$(Build.ArtifactStagingDirectory)/dropInput'
                cleanTargetFolder: true
          - script: npm prune --production
            displayName: 'npm prune --production' # so that only production dependencies are included in SBOM
          - script: npm pack
            displayName: 'npm pack'
            workingDirectory: '$(Build.ArtifactStagingDirectory)/dropInput'
          - script: mkdir dropOutput && mv dropInput/*.tgz dropOutput
            displayName: 'Move package to dropOutput'
            workingDirectory: '$(Build.ArtifactStagingDirectory)'
