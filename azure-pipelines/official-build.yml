parameters:
    - name: IsPrerelease
      type: boolean
      default: true

trigger:
    batch: true
    branches:
        include:
            - v4.x

# CI only, does not trigger on PRs.
pr: none

resources:
    repositories:
        - repository: 1es
          type: git
          name: 1ESPipelineTemplates/1ESPipelineTemplates
          ref: refs/tags/release

extends:
    template: v1/1ES.Official.PipelineTemplate.yml@1es
    parameters:
        pool:
            name: 1es-pool-azfunc
            image: 1es-windows-2022
            os: windows

        stages:
            - stage: WindowsUnitTests
              dependsOn: []
              jobs:
                  - template: /azure-pipelines/templates/test.yml@self

            - stage: LinuxUnitTests
              dependsOn: []
              jobs:
                  - template: /azure-pipelines/templates/test.yml@self
              pool:
                  name: 1es-pool-azfunc
                  image: 1es-ubuntu-22.04
                  os: linux

            - stage: Build
              dependsOn: []
              jobs:
                  - job:
                    templateContext:
                        outputs:
                            - output: pipelineArtifact
                              path: $(Build.ArtifactStagingDirectory)/dropOutput
                              artifact: drop
                              sbomBuildDropPath: '$(Build.ArtifactStagingDirectory)/dropInput'
                              sbomPackageName: 'Azure Functions Node.js Programming Model'
                              # The list of components can't be determined from the webpacked file in the staging dir, so reference the original node_modules folder
                              sbomBuildComponentPath: '$(Build.SourcesDirectory)/node_modules'
                    steps:
                        - task: NodeTool@0
                          inputs:
                              versionSpec: 20.x
                          displayName: 'Install Node.js'
                        - script: npm ci
                          displayName: 'npm ci'
                        - script: npm run updateVersion -- --buildNumber $(Build.BuildNumber)
                          displayName: 'npm run updateVersion'
                          condition: and(succeeded(), eq(${{ parameters.IsPrerelease }}, true))
                        - script: npm run build
                          displayName: 'npm run build'
                        - script: npm run minify
                          displayName: 'npm run minify'
                        - task: CopyFiles@2
                          displayName: 'Copy files to staging'
                          inputs:
                              sourceFolder: '$(Build.SourcesDirectory)'
                              contents: |
                                  dist/**
                                  src/**
                                  types/**
                                  LICENSE
                                  package.json
                                  README.md
                              targetFolder: '$(Build.ArtifactStagingDirectory)/dropInput'
                              cleanTargetFolder: true
                        - script: npm prune --production
                          displayName: 'npm prune --production' # so that only production dependencies are included in SBOM
                        - script: npm pack
                          displayName: 'npm pack'
                          workingDirectory: '$(Build.ArtifactStagingDirectory)/dropInput'
                        - script: mkdir dropOutput && mv dropInput/*.tgz dropOutput
                          displayName: 'Move package to dropOutput'
                          workingDirectory: '$(Build.ArtifactStagingDirectory)'
